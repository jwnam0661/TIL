<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- アノテーションによる設定を有効にする -->
    <context:annotation-config/>

    <!-- Spring MVC:
    指定パッケージ配下の @Component 及びその派生アノテーション付きクラスを
    自動的にスキャンし、DIコンテナで管理する -->
    <context:component-scan base-package="jp.go.moj.tokinet.reception.web"/>
    <mvc:annotation-driven/>

    <!-- Spring MVC: ViewResolverの設定 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value=""/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 静的リソースへのアクセス設定 -->
    <!-- （(dispatcherServlet経由でアクセスするなら下記設定が必要。）
        <mvc:resources mapping="/image/**" location="/image/" />
        <mvc:resources mapping="/javascript/**" location="/javascript/" />
        <mvc:resources mapping="/stylesheet/**" location="/stylesheet/" />
        <mvc:resources mapping="**/*.html" location="/" />
    -->

    <!-- MyBatis定義 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
        <property name="dataSource" ref="FLEXITEDataSource" />
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- トランザクション管理BEAN -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="FLEXITEDataSource"/>
        </property>
        <property name="rollbackOnCommitFailure" value="true" />
    </bean>

    <!-- トランザクション・アドバイザ設定 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
        </tx:attributes>
    </tx:advice>

    <!-- AOP定義 -->
    <!-- [めも]インターフェース以外にAOPを行う場合はproxy-target-classをtrueに設定する必要がある -->
    <aop:config proxy-target-class="true">
        <!-- Controllerでトランザクション管理を行う -->
        <aop:pointcut id="anno" expression="@annotation(org.springframework.web.bind.annotation.RequestMapping)" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="anno" />
        
        <!-- AOPにてログ出力を行う -->
        <aop:aspect id="log" ref="blog" >
            <aop:pointcut id="plog" expression="@annotation(org.springframework.web.bind.annotation.RequestMapping)" />
            <aop:around pointcut-ref="plog" method="aroundLogger" />
        </aop:aspect>
    </aop:config>
    
    <bean id="blog" class="jp.go.moj.tokinet.common.web.ex.fw.util.LoggingAdvisor" scope="request"></bean>
    
    <!-- メッセージ 定義-->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:system-messages</value>
                <value>classpath:application-messages</value>
                <value>classpath:ReceptionWeb-messages</value>
                <value>classpath:ReceptionWeb-log-messages</value>
            </list>
        </property>
    </bean>

    <bean id="tokinetWebUtil" class="jp.go.moj.tokinet.common.web.ex.fw.web.util.TokinetWebUtil">
        <property name="messageSource" ref="messageSource" />
    </bean>

    <!-- インターセプター -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <bean class="jp.go.moj.tokinet.common.web.ex.fw.web.interceptor.ActionLogInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <mvc:mapping path="/**/*.view" />
            <mvc:exclude-mapping path="/ServerBlockageError.view" />
            <mvc:exclude-mapping path="/maintenance/*.do" />
            <bean class="jp.go.moj.tokinet.reception.web.common.interceptor.ReceptionWebServerBlockageControlInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <mvc:mapping path="/**/*.view" />
            <bean class="jp.go.moj.tokinet.common.web.ex.fw.web.interceptor.BrowserCachingInterceptor" >
                <property name="noCache" value="true" />
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <bean class="jp.go.moj.tokinet.reception.web.common.interceptor.ReceptionWebAuthenticationInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <bean class="jp.go.moj.tokinet.reception.web.common.interceptor.ReceptionWebSessionTimeoutInterceptor" >
                <constructor-arg name="configFileList">
                    <list>
                        <!-- クラスパスの通っている場所を記載すること -->
                        <value>token-config/token-config-top.xml</value>
                        <value>token-config/token-config-userreg.xml</value>
                    </list>
                </constructor-arg>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <bean class="jp.go.moj.tokinet.common.web.ex.fw.web.interceptor.TokenInterceptorEx" >
                <constructor-arg name="configFileList">
                    <list>
                        <!-- クラスパスの通っている場所を記載すること -->
                        <value>token-config/token-config-common.xml</value>
                        <value>token-config/token-config-reqclaim.xml</value>
                        <value>token-config/token-config-reqcommon.xml</value>
                        <value>token-config/token-config-reqcomreg.xml</value>
                        <value>token-config/token-config-reqre.xml</value>
                        <value>token-config/token-config-status.xml</value>
                        <value>token-config/token-config-top.xml</value>
                        <value>token-config/token-config-usermod.xml</value>
                        <value>token-config/token-config-userreg.xml</value>
                    </list>
                </constructor-arg>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- サーバ閉塞の設定 -->
    <bean id="serverBlockageController" class="jp.go.moj.tokinet.common.web.ex.fw.web.controller.ServerBlockageController">
        <property name="alwaysOpenPaths" >
            <list>
                <value>/top/SC01WL05-ViewLogin2atkChB3E76XdKF</value>
                <value>/top/SC01WL05-LoginEx</value>
            </list>
        </property>
        <property name="openExcludePaths" >
            <list>
                <value>/top/SC01WL05-ViewLogin2atkChB3E76XdKF</value>
                <value>/top/SC01WL05-LoginEx</value>
            </list>
        </property>
        <property name="kinoId" value="RECEPTION_WEB_MAIN" />
    </bean>

    <!-- multipart/form-data対応（ファイルアップロード用）（Servlet 3.0 以上） -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>

    <!-- Spring MVC の <form:form>タグに追加のHIDDEN項目を埋め込む -->
    <bean id="requestDataValueProcessor"
          class="jp.go.moj.tokinet.common.web.ex.fw.web.taglib.TokinetRequestDataValueProcessor">
    </bean>
</beans>
